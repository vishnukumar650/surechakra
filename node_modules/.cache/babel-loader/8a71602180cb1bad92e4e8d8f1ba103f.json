{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from \"react\"; // Set Theme on Load\n\nconst setThemeOnLoad = darkTheme => {\n  const THEME = {\n    LIGHT: 'light',\n    DARK: 'dark'\n  };\n  let html = window.document.documentElement;\n  let val = darkTheme ? THEME.DARK : THEME.LIGHT;\n  html.classList.add(val);\n}; // Reducer : initial value\n\n\nconst initialState = {\n  isMenuOpen: false,\n  darkTheme: false\n}; // Reducer Action Function\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case `TOGGLE_MENU`:\n      return { ...state,\n        isMenuOpen: !state.isMenuOpen\n      };\n\n    case `CLOSE_MENU`:\n      return { ...state,\n        isMenuOpen: false\n      };\n\n    case `CHANGE_THEME`:\n      {\n        toggleTheme(!state.darkTheme);\n        return { ...state,\n          darkTheme: !state.darkTheme\n        };\n      }\n\n    case `SET_THEME`:\n      {\n        setThemeOnLoad(state.darkTheme);\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}; // Local Storage: Save\n\n\nfunction getSavedValue(key) {\n  let value = JSON.parse(localStorage.getItem(key));\n\n  if (value === null) {\n    return initialState;\n  }\n\n  return value;\n} // Append Dark Theme: Tailwind CSS\n\n\nfunction toggleTheme(isDarkTheme) {\n  const THEME = {\n    LIGHT: 'light',\n    DARK: 'dark'\n  };\n  let html = window.document.documentElement;\n  let val = isDarkTheme ? THEME.DARK : THEME.LIGHT;\n  html.classList.add(val);\n  html.classList.remove(val === THEME.LIGHT ? THEME.DARK : THEME.LIGHT);\n} // Custom Hooks for Persist\n\n\nexport default function useAppPersist(key) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState, () => {\n    return getSavedValue(key);\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n  return [state, dispatch];\n}\n\n_s(useAppPersist, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");","map":{"version":3,"names":["useReducer","useEffect","setThemeOnLoad","darkTheme","THEME","LIGHT","DARK","html","window","document","documentElement","val","classList","add","initialState","isMenuOpen","reducer","state","action","type","toggleTheme","getSavedValue","key","value","JSON","parse","localStorage","getItem","isDarkTheme","remove","useAppPersist","dispatch","setItem","stringify"],"sources":["/home/bew4k00f/Desktop/surechakra/src/functions/useAppPersist.jsx"],"sourcesContent":["import  { useReducer, useEffect } from \"react\"\n\n\n// Set Theme on Load\nconst setThemeOnLoad = (darkTheme) => {\n  const THEME = { LIGHT: 'light', DARK: 'dark' }\n  let html = window.document.documentElement\n  let val = darkTheme ? THEME.DARK: THEME.LIGHT\n  html.classList.add(val)\n}\n  \n// Reducer : initial value\nconst initialState = { isMenuOpen: false, darkTheme: false }\n  \n// Reducer Action Function\nconst reducer = (state, action) => {\n    switch(action.type){\n      case `TOGGLE_MENU`:\n        return { ...state, isMenuOpen: !state.isMenuOpen }\n      case `CLOSE_MENU`:\n        return { ...state, isMenuOpen: false }\n      case `CHANGE_THEME`: {\n        toggleTheme(!state.darkTheme)\n        return { ...state, darkTheme: !state.darkTheme }\n        }\n      case `SET_THEME`: {\n        setThemeOnLoad(state.darkTheme)\n        return state\n      }\n      default:\n        return state\n    }\n}\n\n// Local Storage: Save\nfunction getSavedValue(key){\n    let value = JSON.parse(localStorage.getItem(key))\n    if(value === null){ return initialState }\n    return value\n}\n\n// Append Dark Theme: Tailwind CSS\nfunction toggleTheme(isDarkTheme){\n    const THEME = { LIGHT: 'light', DARK: 'dark' }\n    let html = window.document.documentElement\n    let val = isDarkTheme ? THEME.DARK: THEME.LIGHT\n    html.classList.add(val)\n    html.classList.remove((val===THEME.LIGHT)?THEME.DARK:THEME.LIGHT)\n}\n\n// Custom Hooks for Persist\nexport default function useAppPersist(key){\n    const [state, dispatch] = useReducer(reducer, initialState, ()=>{\n        return getSavedValue(key)\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(state))\n    }, [state, key])\n\n    return [state, dispatch]\n}"],"mappings":";;AAAA,SAAUA,UAAV,EAAsBC,SAAtB,QAAuC,OAAvC,C,CAGA;;AACA,MAAMC,cAAc,GAAIC,SAAD,IAAe;EACpC,MAAMC,KAAK,GAAG;IAAEC,KAAK,EAAE,OAAT;IAAkBC,IAAI,EAAE;EAAxB,CAAd;EACA,IAAIC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,eAA3B;EACA,IAAIC,GAAG,GAAGR,SAAS,GAAGC,KAAK,CAACE,IAAT,GAAeF,KAAK,CAACC,KAAxC;EACAE,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmBF,GAAnB;AACD,CALD,C,CAOA;;;AACA,MAAMG,YAAY,GAAG;EAAEC,UAAU,EAAE,KAAd;EAAqBZ,SAAS,EAAE;AAAhC,CAArB,C,CAEA;;AACA,MAAMa,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC/B,QAAOA,MAAM,CAACC,IAAd;IACE,KAAM,aAAN;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYF,UAAU,EAAE,CAACE,KAAK,CAACF;MAA/B,CAAP;;IACF,KAAM,YAAN;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYF,UAAU,EAAE;MAAxB,CAAP;;IACF,KAAM,cAAN;MAAqB;QACnBK,WAAW,CAAC,CAACH,KAAK,CAACd,SAAR,CAAX;QACA,OAAO,EAAE,GAAGc,KAAL;UAAYd,SAAS,EAAE,CAACc,KAAK,CAACd;QAA9B,CAAP;MACC;;IACH,KAAM,WAAN;MAAkB;QAChBD,cAAc,CAACe,KAAK,CAACd,SAAP,CAAd;QACA,OAAOc,KAAP;MACD;;IACD;MACE,OAAOA,KAAP;EAdJ;AAgBH,CAjBD,C,CAmBA;;;AACA,SAASI,aAAT,CAAuBC,GAAvB,EAA2B;EACvB,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,GAArB,CAAX,CAAZ;;EACA,IAAGC,KAAK,KAAK,IAAb,EAAkB;IAAE,OAAOT,YAAP;EAAqB;;EACzC,OAAOS,KAAP;AACH,C,CAED;;;AACA,SAASH,WAAT,CAAqBQ,WAArB,EAAiC;EAC7B,MAAMxB,KAAK,GAAG;IAAEC,KAAK,EAAE,OAAT;IAAkBC,IAAI,EAAE;EAAxB,CAAd;EACA,IAAIC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,eAA3B;EACA,IAAIC,GAAG,GAAGiB,WAAW,GAAGxB,KAAK,CAACE,IAAT,GAAeF,KAAK,CAACC,KAA1C;EACAE,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmBF,GAAnB;EACAJ,IAAI,CAACK,SAAL,CAAeiB,MAAf,CAAuBlB,GAAG,KAAGP,KAAK,CAACC,KAAb,GAAoBD,KAAK,CAACE,IAA1B,GAA+BF,KAAK,CAACC,KAA3D;AACH,C,CAED;;;AACA,eAAe,SAASyB,aAAT,CAAuBR,GAAvB,EAA2B;EAAA;;EACtC,MAAM,CAACL,KAAD,EAAQc,QAAR,IAAoB/B,UAAU,CAACgB,OAAD,EAAUF,YAAV,EAAwB,MAAI;IAC5D,OAAOO,aAAa,CAACC,GAAD,CAApB;EACH,CAFmC,CAApC;EAIArB,SAAS,CAAC,MAAM;IACZyB,YAAY,CAACM,OAAb,CAAqBV,GAArB,EAA0BE,IAAI,CAACS,SAAL,CAAehB,KAAf,CAA1B;EACH,CAFQ,EAEN,CAACA,KAAD,EAAQK,GAAR,CAFM,CAAT;EAIA,OAAO,CAACL,KAAD,EAAQc,QAAR,CAAP;AACH;;GAVuBD,a"},"metadata":{},"sourceType":"module"}